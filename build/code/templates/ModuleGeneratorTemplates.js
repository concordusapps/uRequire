var ModuleGeneratorTemplates, pathRelative, _;

pathRelative = require('../paths/pathRelative');

_ = require('lodash');

module.exports = ModuleGeneratorTemplates = (function() {

  function ModuleGeneratorTemplates(o) {
    var dep, par;
    this.o = o;
    this.header = "// Generated by uRequire v" + this.o.version;
    this.moduleNamePrint = o.moduleName ? "'" + o.moduleName + "', " : "";
    /* @property parameters of the factory method, eg 'require, _, personModel'
    */

    this.parametersPrint = "require" + (o.moduleType === 'nodejs' ? ', exports, module' : '') + (((function() {
      var _i, _len, _ref, _results;
      _ref = o.parameters;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        par = _ref[_i];
        _results.push(", " + par);
      }
      return _results;
    })()).join(''));
    /* @property arrayDependencies of define [], eg "['require', 'lodash', 'PersonModel']"
    */

    this.arrayDependenciesPrint = "" + (_.isEmpty(o.arrayDependencies) ? "" : o.moduleType === 'nodejs' ? "['require', 'exports', 'module'" : "['require'") + (((function() {
      var _i, _len, _ref, _results;
      _ref = o.arrayDependencies;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        dep = _ref[_i];
        _results.push(", '" + dep + "'");
      }
      return _results;
    })()).join('')) + (_.isEmpty(o.arrayDependencies) ? '' : '], ');
    this.bodyStart = "// uRequire: start body of original " + o.moduleType + " module";
    this.bodyEnd = "// uRequire: end body of original " + o.moduleType + " module";
    this.factoryBodyInjects = "var isWeb = (typeof define === 'function' && define.amd), isNode = !isWeb;";
    /* @property factoryBodyUMDPrint
        Includes original (with replaced require paths) + injections like isWeb, isNode etc.
    */

    this.factoryBodyUMDPrint = "" + this.factoryBodyInjects + "\n\n" + this.bodyStart + "\n" + this.o.factoryBody + "\n" + this.bodyEnd + "\n\n" + (this.o.moduleType === 'nodejs' ? '\nreturn module.exports;' : '');
  }

  /* private
  */


  ModuleGeneratorTemplates.prototype.rootExportsNoConflict = function(factoryFn, rootName) {
    var exp, i;
    if (rootName == null) {
      rootName = 'root';
    }
    return ("\nvar m = " + factoryFn + ";\n" + (this.o.noConflict ? ((function() {
      var _i, _len, _ref, _results;
      _ref = this.o.rootExports;
      _results = [];
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        exp = _ref[i];
        _results.push("" + (i === 0 ? 'var ' : '    ') + "old_" + exp + " = " + rootName + "." + exp);
      }
      return _results;
    }).call(this)).join(',\n') + ';' : '') + "\n" + (((function() {
      var _i, _len, _ref, _results;
      _ref = this.o.rootExports;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        exp = _ref[_i];
        _results.push("" + rootName + "." + exp + " = m");
      }
      return _results;
    }).call(this)).join(';\n')) + ";") + (this.o.noConflict ? "\n\nm.noConflict = function(){\n" + (((function() {
      var _i, _len, _ref, _results;
      _ref = this.o.rootExports;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        exp = _ref[_i];
        _results.push("  " + rootName + "." + exp + " = old_" + exp);
      }
      return _results;
    }).call(this)).join(';\n')) + ";\n  return m;\n};" : '') + "\nreturn m;";
  };

  /* UMD template - runs AS-IS on both Web/AMD and nodejs (having 'npm install urequire').
      * Uses `NodeRequirer` to perform `require`s.
  */


  ModuleGeneratorTemplates.prototype.UMD = function() {
    var nDep;
    return "" + this.header + "\n(function (root, factory) {\n  if (typeof exports === 'object') {\n    var nr = new (require('urequire').NodeRequirer) ('" + this.o.modulePath + "', __dirname, '" + this.o.webRootMap + "');\n    module.exports = factory(nr.require" + (this.o.moduleType === 'nodejs' ? ', exports, module' : '') + (((function() {
      var _i, _len, _ref, _results;
      _ref = this.o.nodeDependencies;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        nDep = _ref[_i];
        _results.push(", nr.require('" + nDep + "')");
      }
      return _results;
    }).call(this)).join('')) + ");" + (false ? this.o.rootExports && this.o.nodejs ? this.rootExportsNoConflict("module.exports") : void 0 : '') + "\n  } else if (typeof define === 'function' && define.amd) {\n      define(" + this.moduleNamePrint + this.arrayDependenciesPrint + (this.o.rootExports ? ("function (" + this.parametersPrint + ") {\n") + (this.rootExportsNoConflict("factory(" + this.parametersPrint + ")")) + "}" : 'factory') + ");\n  }\n})(this, function (" + this.parametersPrint + ") {\n " + this.factoryBodyUMDPrint + " \n});";
  };

  /* AMD template
      Simple `define(['dep'], function(dep){...body...}})`
      Runs only on WEB/AMD/RequireJs (and hopefully soon in node through uRequire'd *driven* RequireJS).
  */


  ModuleGeneratorTemplates.prototype.AMD = function() {
    return ("" + this.header + "\ndefine(" + this.moduleNamePrint + this.arrayDependenciesPrint + "\n  function (" + this.parametersPrint + ") {") + (!this.o.rootExports ? this.factoryBodyUMDPrint : this.rootExportsNoConflict("(function (" + this.parametersPrint + ") {\n     " + this.factoryBodyUMDPrint + "\n  }\n)(" + this.parametersPrint + ")", 'window')) + "\n});";
  };

  ModuleGeneratorTemplates.prototype.nodejs = function() {
    var param, pi;
    return "" + this.header + (this.o.parameters.length > 0 ? "\nvar " : '') + (((function() {
      var _i, _len, _ref, _results;
      _ref = this.o.parameters;
      _results = [];
      for (pi = _i = 0, _len = _ref.length; _i < _len; pi = ++_i) {
        param = _ref[pi];
        _results.push("" + (pi === 0 ? '' : '    ') + param + " = require('" + this.o.nodeDependencies[pi] + "')");
      }
      return _results;
    }).call(this)).join(',\n')) + ";\n\n" + this.factoryBodyInjects + "\n\n" + this.bodyStart + "\n" + (this.o.moduleType === 'AMD' ? "module.exports = (function() {\n " + this.o.factoryBody + " })()" : this.o.factoryBody) + "\n" + this.bodyEnd;
  };

  return ModuleGeneratorTemplates;

})();
